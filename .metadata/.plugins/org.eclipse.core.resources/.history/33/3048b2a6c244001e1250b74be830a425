package jsoft.ads.user;

import jsoft.*;
import jsoft.library.ORDER;
import jsoft.objects.*;
import java.sql.*;
import java.util.*;

import org.javatuples.Pair;
import org.javatuples.Triplet;

public class UserModel {

	private User u;
	
	public UserModel(ConnectionPool cp) {
		// TODO Auto-generated constructor stub
		this.u = new UserImpl(cp);
	}

	public boolean addUser(UserObject item) {
		return this.u.addUser(item);
	}
	
	public boolean editUser(UserObject item) {
		return this.u.editUser(item);
	}
	
	public boolean delUser(UserObject item) {
		return this.u.delUser(item);
	}
	
	public UserObject getUserObject(int id) {
		UserObject item = null;
		ResultSet rs = this.u.getUser(id);
		if(rs != null) {
			try {
				if(rs.next()) {
					item = new UserObject();
					item.setUser_id(rs.getInt("user_id"));
					item.setUser_name(rs.getString("user_name"));
					item.setUser_fullname(rs.getString("user_fullname"));
					item.setUser_email(rs.getString("user_email"));
					item.setUser_address(rs.getString("user_address"));
					item.setUser_created_date(rs.getString("user_created_date"));
					item.setUser_last_modified(rs.getString("user_last_modified"));
					item.setUser_homephone(rs.getString("user_homephone"));
					
					item.setUser_permission(rs.getByte("user_permission"));
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		return item;
	}
	
	public UserObject getUserObject(String username, String userpass) {
		UserObject item = null;
		ResultSet rs = this.u.getUser(username, userpass);
		
		if(rs != null) {
			try {
				if(rs.next()) {
					item = new UserObject();
					item.setUser_id(rs.getInt("user_id"));
					item.setUser_name(rs.getString("user_name"));
					item.setUser_fullname(rs.getString("user_fullname"));
					item.setUser_email(rs.getString("user_email"));
					item.setUser_address(rs.getString("user_address"));
					item.setUser_created_date(rs.getString("user_created_date"));
					item.setUser_last_modified(rs.getString("user_last_modified"));
					item.setUser_homephone(rs.getString("user_homephone"));
					
					item.setUser_permission(rs.getByte("user_permission"));
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return item;
	}
	
	
	public Pair<ArrayList<UserObject>, Short> getUserObjects(Triplet<UserObject, Integer, Byte> infos, Pair<USER_SORT, ORDER> so) {
		ArrayList<UserObject> items = new ArrayList<>();
		UserObject item = null;
		ArrayList<ResultSet> res = this.u.getUsers(infos, so);
		ResultSet rs = res.get(0);
		if(rs != null) {
			try {
				while(rs.next()) {
					item = new UserObject();
					item.setUser_id(rs.getInt("user_id"));
					item.setUser_name(rs.getString("user_name"));
					item.setUser_fullname(rs.getString("user_fullname"));
					item.setUser_email(rs.getString("user_email"));
					item.setUser_address(rs.getString("user_address"));
					item.setUser_created_date(rs.getString("user_created_date"));
					item.setUser_last_modified(rs.getString("user_last_modified"));
					item.setUser_homephone(rs.getString("user_homephone"));
					item.setUser_permission(rs.getByte("user_permission"));
					
					items.add(item);
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		rs = res.get(1);
		short total = 0;
		if(rs!=null) {
			try {
				if(rs.next()) {
					total = rs.getShort("total");
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return new Pair<>(items, total);
	}
	
	public Pair<ArrayList<UserObject>, Integer> getUserObjects(Quartet<UserObject, Short, Byte, USER_ORDER> infos) {

		int at = (infos.getValue1() - 1) * infos.getValue2();

		Quartet<UserObject, Integer, Byte, USER_ORDER> infos2 = new Quartet<>(infos.getValue0(), at, infos.getValue2(),
				infos.getValue3());

		ArrayList<ResultSet> res = this.u.getUsers(infos2);

		ArrayList<UserObject> list = new ArrayList<>();
		int total = 0;

		if (res.size() > 0) {
			ResultSet rs = res.get(0);
			UserObject item = null;
			if (rs != null) {
				try {
					while (rs.next()) {
						item = new UserObject();
						item.setUser_id(rs.getInt("user_id"));
						item.setUser_name(rs.getString("user_name"));
						item.setUser_fullname(rs.getString("user_fullname"));
						item.setUser_address(rs.getString("user_address"));
						item.setUser_email(rs.getString("user_email"));
						item.setUser_homephone(rs.getString("user_homephone"));
						item.setUser_officephone(rs.getString("user_officephone"));
						item.setUser_created_date(rs.getString("user_created_date"));
						item.setUser_last_modified(rs.getString("user_last_modified"));
						item.setUser_permission(rs.getByte("user_permission"));
						item.setUser_parent_id(rs.getInt("user_parent_id"));

						list.add(item);
					}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

			// Lấy tổng số bản ghi
			rs = res.get(1);
			if (rs != null) {
				try {
					if (rs.next()) {
						total = rs.getInt("total");
					}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}

		return new Pair<>(list, total);
	}
	
}
