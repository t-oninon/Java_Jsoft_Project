package jsoft.ads.section;

import jsoft.*;
import jsoft.ads.section.SECTION_SORT;
import jsoft.ads.user.USER_SORT;
import jsoft.library.ORDER;
import jsoft.objects.*;
import java.sql.*;
import java.util.*;

import org.javatuples.Pair;
import org.javatuples.Quartet;
import org.javatuples.Triplet;

public class SectionModel {
	Section s;
	
	public SectionModel(ConnectionPool cp) {
		// TODO Auto-generated constructor stub
		this.s = new SectionImpl(cp);
	}
	
	public boolean addSection(SectionObject item) {
		return this.s.addSection(item);
	}

	public boolean editSection(SectionObject item) {
		return this.s.editSection(item);
	}
	
	public boolean delSection(SectionObject item) {
		return this.s.delSection(item);
	}
	
	public SectionObject getSectionObject(short id, UserObject userLogin) {
		SectionObject item = null;
		ResultSet rs = this.s.getSection(id, userLogin);
		if(rs!=null) {
			try {
				if(rs.next()) {
					item = new SectionObject();
					item.setSection_id(rs.getShort("section_id"));
					item.setSection_name(rs.getString("section_name"));
					item.setSection_notes(rs.getString("section_notes"));
					item.setSection_manager_id(rs.getInt("section_manager_id"));
					item.setSection_enable(rs.getBoolean("section_enable"));
					item.setSection_delete(rs.getBoolean("section_delete"));
					item.setSection_created_author_id(rs.getInt("section_created_author_id"));
					item.setSection_name_en(rs.getString("section_name_en"));
					item.setSection_language(rs.getByte("section_language"));
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return item;
	}
	
	public Pair<ArrayList<SectionObject>, Short> getSectionObjects(Triplet<SectionObject, Integer, Byte> infos, Pair<SECTION_SORT, ORDER> so) {
		ArrayList<SectionObject> items = new ArrayList<>();
		SectionObject item = null;
		ArrayList<ResultSet> res = this.s.getSections(infos, so);
		ResultSet rs = res.get(0);
		if(rs != null) {
			try {
				while(rs.next()) {
					item = new SectionObject();
					item.setSection_id(rs.getShort("section_id"));
					item.setSection_name(rs.getString("section_name"));
					item.setSection_notes(rs.getString("section_notes"));
					item.setSection_manager_id(rs.getInt("section_manager_id"));
					item.setSection_enable(rs.getBoolean("section_enable"));
					item.setSection_delete(rs.getBoolean("section_delete"));
					item.setSection_created_author_id(rs.getInt("section_created_author_id"));
					item.setSection_name_en(rs.getString("section_name_en"));
					item.setSection_language(rs.getByte("section_language"));
					
					items.add(item);
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		rs = res.get(1);
		short total = 0;
		if(rs!=null) {
			try {
				if(rs.next()) {
					total = rs.getShort("total");
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return new Pair<>(items, total);
	}
	
	public Pair<ArrayList<SectionObject>, Integer> getSectionObjects(Quartet<SectionObject, Short, Byte, SECTION_SORT> infos) {
		int at = (infos.getValue1() - 1) * infos.getValue2();

		Quartet<SectionObject, Integer, Byte, SECTION_SORT> infos2 = new Quartet<>(infos.getValue0(), at, infos.getValue2(),
				infos.getValue3());
		
		ArrayList<ResultSet> res = this.s.getSections(infos2);
		ArrayList<SectionObject> list = new ArrayList<>();
		
		ResultSet rs = res.get(0);
		SectionObject item = null;
		
		if(rs != null) {
			try {
				while(rs.next()) {
					item = new SectionObject();
					item.setSection_id(rs.getShort("section_id"));
					item.setSection_name(rs.getString("section_name"));
					item.setSection_notes(rs.getString("section_notes"));
					item.setSection_manager_id(rs.getInt("section_manager_id"));
					item.setSection_enable(rs.getBoolean("section_enable"));
					item.setSection_delete(rs.getBoolean("section_delete"));
					item.setSection_created_author_id(rs.getInt("section_created_author_id"));
					item.setSection_name_en(rs.getString("section_name_en"));
					item.setSection_language(rs.getByte("section_language"));
					
					list.add(item);
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		rs = res.get(1);
		
		int total = 0;
		if(rs!=null) {
			try {
				if(rs.next()) {
					total = rs.getShort("total");
				}
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return new Pair<>(items, total);
	}
}
